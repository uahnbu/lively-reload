{
  "name": "lively-reload",
  "displayName": "Lively Reload",
  "description": "Reload your webpage without saving",
  "version": "0.1.2",
  "publisher": "uahnbu",
  "icon": "resources/icon.png",
  "keywords": [
    "live reload",
    "live server",
    "hot reload",
    "live preview",
    "browser preview"
  ],
  "galleryBanner": {
    "color": "#2b0b66",
    "theme": "dark"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/uahnbu/lively-reload.git"
  },
  "engines": {
    "vscode": "^1.57.0"
  },
  "activationEvents": [
    "*"
  ],
  "main": "./out/extension",
  "contributes": {
    "commands": [
      {
        "command": "livelyReload.startLively",
        "title": "Go Lively"
      },
      {
        "command": "livelyReload.closeLively",
        "title": "Quit Lively"
      },
      {
        "command": "livelyReload.reloadLively",
        "title": "Reload Lively"
      }
    ],
    "configuration": {
      "title": "Lively Reload",
      "properties": {
        "livelyReload.port": {
          "type": "number",
          "default": "2020",
          "minimum": 0,
          "maximum": 65535,
          "description": "A port to bind the server to."
        },
        "livelyReload.openBrowser": {
          "type": "boolean",
          "default": true,
          "description": "Whether to open browser when extension starts."
        },
        "livelyReload.debug": {
          "type": "boolean",
          "default": false,
          "description": "Whether to show logs in the browser's console."
        },
        "livelyReload.pugCompile.enabled": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Whether to compile `.pug` files to HTML on save.  \n`.pug` content will still be servable to the live preview if compiling is disabled."
        },
        "livelyReload.pugCompile.outdir": {
          "type": "string",
          "default": "dist",
          "markdownDescription": "A directory relative to the workspace folder to compile `.pug` files to."
        },
        "livelyReload.pugCompile.maxLoop": {
          "type": "number",
          "default": 99,
          "markdownDescription": "Change the value if you might use a loop with more iterations.  \n`maxLoop` is a safelock constraint in case you trigger infinite loop, e.g.:\n```pug\n- var n = 1; while n\n```"
        },
        "livelyReload.pugCompile.pretty": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Whether to compile `.pug` files to pretty *HTML*."
        },
        "livelyReload.sassCompile.enabled": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Whether to compile `.scss`/`.sass` files to *CSS* on save.  \n`.scss`/`.sass` content will still be servable to the live preview if compiling is disabled."
        },
        "livelyReload.sassCompile.outdir": {
          "type": "string",
          "default": "dist",
          "markdownDescription": "A directory relative to the workspace folder to compile `.scss`/`.sass` files to."
        },
        "livelyReload.sassCompile.pretty": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Whether to compile `.scss`/`.sass` files to pretty *CSS*."
        },
        "livelyReload.typescriptCompile.enabled": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Whether to compile `.ts` files to *JS* on save.  \nWhen disabled, saved `.ts` files won't be updated, and the preview won't automatically reload.  \n*Typescript* by default does not support compiling minifies."
        },
        "livelyReload.typescriptCompile.outdir": {
          "type": "string",
          "default": "dist",
          "markdownDescription": "A directory relative to the workspace folder to compile `.ts` files to."
        },
        "livelyReload.typescriptCompile.tsconfig": {
          "type": "object",
          "default": {
            "downlevelIteration": false,
            "emitBOM": false,
            "emitDecoratorMetadata": true,
            "importHelpers": false,
            "importsNotUsedAsValues": "preserve",
            "newLine": null,
            "preserveConstEnums": false,
            "target": "ES3",
            "removeComments": false,
            "useDefineForClassFields": false
          },
          "markdownDescription": "Compiling options inherited from `tsconfig.json`.  \nSee more at https://www.typescriptlang.org/tsconfig."
        }
      }
    }
  },
  "scripts": {
    "clean": "rmdir /s /q out",
    "package": "npm run build && vsce package",
    "build": "npm run clean & webpack",
    "compile": "npm run clean & webpack --mode development",
    "watch": "npm run clean & webpack -w --mode development",
    "lint": "eslint src --ext ts",
    "compiled:ts": "tsc",
    "compiled:html": "cpx \"src/**/*.html\" out",
    "compiled": "run-p compiled:*",
    "watched": "run-p \"compiled:* -- -w\""
  },
  "devDependencies": {
    "@types/express": "^4.17.12",
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.2.2",
    "@types/node": "^15.12.4",
    "@types/pug": "^2.0.4",
    "@types/sass": "^1.16.0",
    "@types/vscode": "^1.57.0",
    "@types/ws": "^7.4.5",
    "@typescript-eslint/eslint-plugin": "^4.27.0",
    "@typescript-eslint/parser": "^4.27.0",
    "copy-webpack-plugin": "^9.0.1",
    "eslint": "^7.29.0",
    "fork-ts-checker-webpack-plugin": "^6.2.12",
    "glob": "^7.1.7",
    "mocha": "^9.0.1",
    "node-loader": "^2.0.0",
    "ts-loader": "^9.2.3",
    "utf-8-validate": "^5.0.5",
    "vscode-test": "^1.5.2",
    "webpack-cli": "^4.7.2"
  },
  "dependencies": {
    "diff-dom": "^4.2.2",
    "express": "^4.17.1",
    "html-validate": "^4.14.0",
    "ngrok": "^4.0.1",
    "pug": "^3.0.2",
    "sass": "^1.35.1",
    "typescript": "^4.3.4",
    "ws": "^7.5.0"
  }
}
